=RUBSUB=

RubSub is a way to manage multiple versions of Ruby.  It is designed
to work in a shell independent way.

This is based on the concept of RVM, but is designed to run entirely
as ruby, using no shell-functions.

While this isn't finished, it *does* work. W00T!

==Quickstart==

curl -q http://github.com/docwhat/rubsub/raw/stable/rubsub-install.sh | bash

Then follow the simple instructions.

Some simple commands:
# rubsub info        # => returns some info.
# rubsub install 1.9 # => installs latest ruby-1.9 version.
# rubsub upgrade     # => upgrades rubsub

==Similar Products==

* Why would I use RubSub instead of RVM?

RVM uses lots of shell functions.  This makes it brittle and hard to
contribute to.  In addition, RubSub has been designed from the
beginning to be easily upgradable.

==Developing==

Do you want to help develop RubSub? Or maybe just play with the latest
greatest version?

# git clone git://github.com/docwhat/rubsub.git
# cd rubsub
# ./rubsub-install.sh

If you make changes, you'll need to re-run rubsub-install.sh to get
your code running.

==Unit Tests==

RubSub has unittests, you can run them from the checkout by using
spec:

# rubsub internal
# spec spec

Alternatively, you can use autospec:

# autospec

==Future Goals==

 * Painless upgrading of ruby versions – Gems from previous verions
   will be installed into the new version.
 * Stand-alone mode – Designed for use with ruby/rails deployments.
 * Support for macruby, jruby and others.

==Credits==

 * Written by Christian Höltje – http://docwhat.org/
  * The original concept for this was Wayne E. Seguin's
     RVM: http://rvm.beginrescueend.com/
 * Wayne E. Seguin has been helpful, as always.

