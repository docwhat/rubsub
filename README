=RVM2=

This is (currently) a prototype to see if we can run RVM entirely
within ruby.

WARNING: Don't expect anything to work!

==Quickstart==

curl http://github.com/docwhat/rvm2/raw/master/rvm-install.sh | bash

(yup, it's that simple)

==Known Issues==
  * We need a reliable ruby to work with. We don't want to rely on a system ruby.
  * We need a way to allow each shell instance to (potentially) use a
    different ruby version. We don't want a 'system wide' switch of
    ruby versions.
  * Downloading the rvm2 code.  While this could be done via github's
    Download feature, I'd prefer to be able to pull down the latest/greatest.

==Solutions==

===A Reliable Ruby===

We will download and compile miniruby.  This will give us a static, simple ruby
with a lot of features.

Implemented in rvm-install.sh

===per-shell status===

Use a "session-key" to control the rvm configuration.

I have two thoughts:
  # Use $SHELL-$$ -- This is not guaranteed unique, especially given infinite time.
  # Require that your shell run "eval rvm --start-session" which creates an environment
    with a read-only session id.

===Getting the code===

Currently, all that is implemented a local install version.  It works
only via the environment variable "LOCAL_INSTALL=yes".

